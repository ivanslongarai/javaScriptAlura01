{"version":3,"sources":["../../app-es6/dao/NegotiationDAO.js"],"names":["Negotiation","NegotiationDAO","connection","_connection","_store","negotiation","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negotiations","actual","result","record","value","push","Date","_date","_amount","_price","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,uB,sBAAAA,W;;;;;;;;;;;;;;;;;;;;;sCAEKC,c;AAET,wCAAYC,UAAZ,EAAwB;AAAA;;AACpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,cAAd;AACH;;;;wCAEGC,W,EAAa;AAAA;;AACb,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAMC,UAAU,MAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,MAAKN,MAAN,CAA7B,EAA4C,WAA5C,EACXO,WADW,CACC,MAAKP,MADN,EAEXQ,GAFW,CAEPP,WAFO,CAAhB;;AAIAI,oCAAQI,SAAR,GAAoB,aAAK;AACrBN;AACH,6BAFD;AAGAE,oCAAQK,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,yCAAP;AACH,6BAHD;AAIH,yBAbM,CAAP;AAcH;;;8CAES;AAAA;;AACN,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIY,SAAS,OAAKjB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,WADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRiB,UAHQ,EAAb;;AAKA,gCAAIC,eAAe,EAAnB;;AAEAF,mCAAOP,SAAP,GAAmB,aAAK;AACpB,oCAAIU,SAASN,EAAEC,MAAF,CAASM,MAAtB;AACA,oCAAID,MAAJ,EAAY;AACR,wCAAIE,SAASF,OAAOG,KAApB;AACAJ,iDAAaK,IAAb,CAAkB,IAAI3B,WAAJ,CAAgB,IAAI4B,IAAJ,CAASH,OAAOI,KAAhB,CAAhB,EAAwCJ,OAAOK,OAA/C,EAAwDL,OAAOM,MAA/D,CAAlB;AACAR,2CAAOS,QAAP;AACH,iCAJD,MAIO;AACHzB,4CAAQe,YAAR;AACH;AACJ,6BATD;;AAWAF,mCAAON,OAAP,GAAiB,aAAK;AAClBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,yCAAP;AACH,6BAHD;AAIH,yBAvBM,CAAP;AAwBH;;;gDAEU;AAAA;;AACP,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,UAAU,OAAKN,WAAL,CACbO,WADa,CACD,CAAC,OAAKN,MAAN,CADC,EACc,WADd,EAEbO,WAFa,CAED,OAAKP,MAFJ,EAGb6B,KAHa,EAAd;AAIAxB,oCAAQI,SAAR,GAAoB;AAAA,uCAAKN,QAAQ,oCAAR,CAAL;AAAA,6BAApB;AACAE,oCAAQK,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,0CAAP;AACH,6BAHD;AAIH,yBAVM,CAAP;AAWH","file":"NegotiationDAO.js","sourcesContent":["import {Negotiation} from \"../models/Negotiation\";\r\n\r\nexport class NegotiationDAO {\r\n\r\n    constructor(connection) {\r\n        this._connection = connection;\r\n        this._store = \"negotiations\";\r\n    }\r\n\r\n    add(negotiation) {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            const request = this._connection.transaction([this._store], \"readwrite\")\r\n                .objectStore(this._store)\r\n                .add(negotiation);\r\n\r\n            request.onsuccess = e => {\r\n                resolve();\r\n            }\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject(\"Não foi possível adicionar a negociação\");\r\n            }\r\n        })\r\n    }\r\n\r\n    listAll() {\r\n        return new Promise((resolve, reject) => {\r\n            let cursor = this._connection\r\n                .transaction([this._store], \"readwrite\")\r\n                .objectStore(this._store)\r\n                .openCursor();\r\n\r\n            let negotiations = [];\r\n\r\n            cursor.onsuccess = e => {\r\n                let actual = e.target.result;\r\n                if (actual) {\r\n                    let record = actual.value;\r\n                    negotiations.push(new Negotiation(new Date(record._date), record._amount, record._price));\r\n                    actual.continue();\r\n                } else {\r\n                    resolve(negotiations);\r\n                }\r\n            }\r\n\r\n            cursor.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject(\"Não foi possível listar as negociações.\")\r\n            }\r\n        })\r\n    }\r\n\r\n    clearList(){\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n            .transaction([this._store], \"readwrite\")\r\n            .objectStore(this._store)\r\n            .clear();\r\n            request.onsuccess = e => resolve(\"Negociações excluídas com sucesso.\");\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject(\"Não foi possível excluir as negociações.\")\r\n            };\r\n        })\r\n    }\r\n}"]}