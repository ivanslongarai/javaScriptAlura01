{"version":3,"sources":["../../app-es6/polyfill/fetch.js"],"names":["System","register","_export","_context","setters","execute","self","fetch","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","map","forEach","append","Object","getOwnPropertyNames","prototype","list","push","get","values","getAll","has","hasOwnProperty","set","callback","thisArg","call","keys","entries","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","toString","ArrayBuffer","Error","type","rejected","then","text","decode","json","JSON","parse","methods","normalizeMethod","method","upcased","toUpperCase","indexOf","Request","input","options","url","credentials","mode","referrer","clone","form","trim","split","bytes","replace","join","decodeURIComponent","xhr","head","pairs","getAllResponseHeaders","header","key","Response","bodyInit","status","ok","statusText","response","redirectStatuses","redirect","RangeError","location","init","request","XMLHttpRequest","responseURL","getResponseHeader","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill"],"mappings":"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","file":"fetch.js","sourcesContent":["'use strict';\n\nSystem.register([], function (_export, _context) {\n  \"use strict\";\n\n  return {\n    setters: [],\n    execute: function () {\n      (function (self) {\n        'use strict';\n\n        if (self.fetch) {\n          return;\n        }\n\n        var support = {\n          searchParams: 'URLSearchParams' in self,\n          iterable: 'Symbol' in self && 'iterator' in Symbol,\n          blob: 'FileReader' in self && 'Blob' in self && function () {\n            try {\n              new Blob();\n              return true;\n            } catch (e) {\n              return false;\n            }\n          }(),\n          formData: 'FormData' in self,\n          arrayBuffer: 'ArrayBuffer' in self\n        };\n\n        function normalizeName(name) {\n          if (typeof name !== 'string') {\n            name = String(name);\n          }\n          if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n            throw new TypeError('Invalid character in header field name');\n          }\n          return name.toLowerCase();\n        }\n\n        function normalizeValue(value) {\n          if (typeof value !== 'string') {\n            value = String(value);\n          }\n          return value;\n        }\n\n        // Build a destructive iterator for the value list\n        function iteratorFor(items) {\n          var iterator = {\n            next: function next() {\n              var value = items.shift();\n              return { done: value === undefined, value: value };\n            }\n          };\n\n          if (support.iterable) {\n            iterator[Symbol.iterator] = function () {\n              return iterator;\n            };\n          }\n\n          return iterator;\n        }\n\n        function Headers(headers) {\n          this.map = {};\n\n          if (headers instanceof Headers) {\n            headers.forEach(function (value, name) {\n              this.append(name, value);\n            }, this);\n          } else if (headers) {\n            Object.getOwnPropertyNames(headers).forEach(function (name) {\n              this.append(name, headers[name]);\n            }, this);\n          }\n        }\n\n        Headers.prototype.append = function (name, value) {\n          name = normalizeName(name);\n          value = normalizeValue(value);\n          var list = this.map[name];\n          if (!list) {\n            list = [];\n            this.map[name] = list;\n          }\n          list.push(value);\n        };\n\n        Headers.prototype['delete'] = function (name) {\n          delete this.map[normalizeName(name)];\n        };\n\n        Headers.prototype.get = function (name) {\n          var values = this.map[normalizeName(name)];\n          return values ? values[0] : null;\n        };\n\n        Headers.prototype.getAll = function (name) {\n          return this.map[normalizeName(name)] || [];\n        };\n\n        Headers.prototype.has = function (name) {\n          return this.map.hasOwnProperty(normalizeName(name));\n        };\n\n        Headers.prototype.set = function (name, value) {\n          this.map[normalizeName(name)] = [normalizeValue(value)];\n        };\n\n        Headers.prototype.forEach = function (callback, thisArg) {\n          Object.getOwnPropertyNames(this.map).forEach(function (name) {\n            this.map[name].forEach(function (value) {\n              callback.call(thisArg, value, name, this);\n            }, this);\n          }, this);\n        };\n\n        Headers.prototype.keys = function () {\n          var items = [];\n          this.forEach(function (value, name) {\n            items.push(name);\n          });\n          return iteratorFor(items);\n        };\n\n        Headers.prototype.values = function () {\n          var items = [];\n          this.forEach(function (value) {\n            items.push(value);\n          });\n          return iteratorFor(items);\n        };\n\n        Headers.prototype.entries = function () {\n          var items = [];\n          this.forEach(function (value, name) {\n            items.push([name, value]);\n          });\n          return iteratorFor(items);\n        };\n\n        if (support.iterable) {\n          Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n        }\n\n        function consumed(body) {\n          if (body.bodyUsed) {\n            return Promise.reject(new TypeError('Already read'));\n          }\n          body.bodyUsed = true;\n        }\n\n        function fileReaderReady(reader) {\n          return new Promise(function (resolve, reject) {\n            reader.onload = function () {\n              resolve(reader.result);\n            };\n            reader.onerror = function () {\n              reject(reader.error);\n            };\n          });\n        }\n\n        function readBlobAsArrayBuffer(blob) {\n          var reader = new FileReader();\n          reader.readAsArrayBuffer(blob);\n          return fileReaderReady(reader);\n        }\n\n        function readBlobAsText(blob) {\n          var reader = new FileReader();\n          reader.readAsText(blob);\n          return fileReaderReady(reader);\n        }\n\n        function Body() {\n          this.bodyUsed = false;\n\n          this._initBody = function (body) {\n            this._bodyInit = body;\n            if (typeof body === 'string') {\n              this._bodyText = body;\n            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n              this._bodyBlob = body;\n            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n              this._bodyFormData = body;\n            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n              this._bodyText = body.toString();\n            } else if (!body) {\n              this._bodyText = '';\n            } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n              // Only support ArrayBuffers for POST method.\n              // Receiving ArrayBuffers happens via Blobs, instead.\n            } else {\n              throw new Error('unsupported BodyInit type');\n            }\n\n            if (!this.headers.get('content-type')) {\n              if (typeof body === 'string') {\n                this.headers.set('content-type', 'text/plain;charset=UTF-8');\n              } else if (this._bodyBlob && this._bodyBlob.type) {\n                this.headers.set('content-type', this._bodyBlob.type);\n              } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n                this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n              }\n            }\n          };\n\n          if (support.blob) {\n            this.blob = function () {\n              var rejected = consumed(this);\n              if (rejected) {\n                return rejected;\n              }\n\n              if (this._bodyBlob) {\n                return Promise.resolve(this._bodyBlob);\n              } else if (this._bodyFormData) {\n                throw new Error('could not read FormData body as blob');\n              } else {\n                return Promise.resolve(new Blob([this._bodyText]));\n              }\n            };\n\n            this.arrayBuffer = function () {\n              return this.blob().then(readBlobAsArrayBuffer);\n            };\n\n            this.text = function () {\n              var rejected = consumed(this);\n              if (rejected) {\n                return rejected;\n              }\n\n              if (this._bodyBlob) {\n                return readBlobAsText(this._bodyBlob);\n              } else if (this._bodyFormData) {\n                throw new Error('could not read FormData body as text');\n              } else {\n                return Promise.resolve(this._bodyText);\n              }\n            };\n          } else {\n            this.text = function () {\n              var rejected = consumed(this);\n              return rejected ? rejected : Promise.resolve(this._bodyText);\n            };\n          }\n\n          if (support.formData) {\n            this.formData = function () {\n              return this.text().then(decode);\n            };\n          }\n\n          this.json = function () {\n            return this.text().then(JSON.parse);\n          };\n\n          return this;\n        }\n\n        // HTTP methods whose capitalization should be normalized\n        var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n        function normalizeMethod(method) {\n          var upcased = method.toUpperCase();\n          return methods.indexOf(upcased) > -1 ? upcased : method;\n        }\n\n        function Request(input, options) {\n          options = options || {};\n          var body = options.body;\n          if (Request.prototype.isPrototypeOf(input)) {\n            if (input.bodyUsed) {\n              throw new TypeError('Already read');\n            }\n            this.url = input.url;\n            this.credentials = input.credentials;\n            if (!options.headers) {\n              this.headers = new Headers(input.headers);\n            }\n            this.method = input.method;\n            this.mode = input.mode;\n            if (!body) {\n              body = input._bodyInit;\n              input.bodyUsed = true;\n            }\n          } else {\n            this.url = input;\n          }\n\n          this.credentials = options.credentials || this.credentials || 'omit';\n          if (options.headers || !this.headers) {\n            this.headers = new Headers(options.headers);\n          }\n          this.method = normalizeMethod(options.method || this.method || 'GET');\n          this.mode = options.mode || this.mode || null;\n          this.referrer = null;\n\n          if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n            throw new TypeError('Body not allowed for GET or HEAD requests');\n          }\n          this._initBody(body);\n        }\n\n        Request.prototype.clone = function () {\n          return new Request(this);\n        };\n\n        function decode(body) {\n          var form = new FormData();\n          body.trim().split('&').forEach(function (bytes) {\n            if (bytes) {\n              var split = bytes.split('=');\n              var name = split.shift().replace(/\\+/g, ' ');\n              var value = split.join('=').replace(/\\+/g, ' ');\n              form.append(decodeURIComponent(name), decodeURIComponent(value));\n            }\n          });\n          return form;\n        }\n\n        function headers(xhr) {\n          var head = new Headers();\n          var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n');\n          pairs.forEach(function (header) {\n            var split = header.trim().split(':');\n            var key = split.shift().trim();\n            var value = split.join(':').trim();\n            head.append(key, value);\n          });\n          return head;\n        }\n\n        Body.call(Request.prototype);\n\n        function Response(bodyInit, options) {\n          if (!options) {\n            options = {};\n          }\n\n          this.type = 'default';\n          this.status = options.status;\n          this.ok = this.status >= 200 && this.status < 300;\n          this.statusText = options.statusText;\n          this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers);\n          this.url = options.url || '';\n          this._initBody(bodyInit);\n        }\n\n        Body.call(Response.prototype);\n\n        Response.prototype.clone = function () {\n          return new Response(this._bodyInit, {\n            status: this.status,\n            statusText: this.statusText,\n            headers: new Headers(this.headers),\n            url: this.url\n          });\n        };\n\n        Response.error = function () {\n          var response = new Response(null, { status: 0, statusText: '' });\n          response.type = 'error';\n          return response;\n        };\n\n        var redirectStatuses = [301, 302, 303, 307, 308];\n\n        Response.redirect = function (url, status) {\n          if (redirectStatuses.indexOf(status) === -1) {\n            throw new RangeError('Invalid status code');\n          }\n\n          return new Response(null, { status: status, headers: { location: url } });\n        };\n\n        self.Headers = Headers;\n        self.Request = Request;\n        self.Response = Response;\n\n        self.fetch = function (input, init) {\n          return new Promise(function (resolve, reject) {\n            var request;\n            if (Request.prototype.isPrototypeOf(input) && !init) {\n              request = input;\n            } else {\n              request = new Request(input, init);\n            }\n\n            var xhr = new XMLHttpRequest();\n\n            function responseURL() {\n              if ('responseURL' in xhr) {\n                return xhr.responseURL;\n              }\n\n              // Avoid security warnings on getResponseHeader when not allowed by CORS\n              if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n                return xhr.getResponseHeader('X-Request-URL');\n              }\n\n              return;\n            }\n\n            xhr.onload = function () {\n              var options = {\n                status: xhr.status,\n                statusText: xhr.statusText,\n                headers: headers(xhr),\n                url: responseURL()\n              };\n              var body = 'response' in xhr ? xhr.response : xhr.responseText;\n              resolve(new Response(body, options));\n            };\n\n            xhr.onerror = function () {\n              reject(new TypeError('Network request failed'));\n            };\n\n            xhr.ontimeout = function () {\n              reject(new TypeError('Network request failed'));\n            };\n\n            xhr.open(request.method, request.url, true);\n\n            if (request.credentials === 'include') {\n              xhr.withCredentials = true;\n            }\n\n            if ('responseType' in xhr && support.blob) {\n              xhr.responseType = 'blob';\n            }\n\n            request.headers.forEach(function (value, name) {\n              xhr.setRequestHeader(name, value);\n            });\n\n            xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n          });\n        };\n        self.fetch.polyfill = true;\n      })(typeof self !== 'undefined' ? self : undefined);\n    }\n  };\n});\n//# sourceMappingURL=fetch.js.map"]}